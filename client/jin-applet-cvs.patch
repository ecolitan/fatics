? build
? classes
? release/ant-contrib.jar
? release/compile
? release/jin-
? release/jin-fatics
Index: release/build.xml
===================================================================
RCS file: /cvsroot/jin/jin/release/build.xml,v
retrieving revision 1.63
diff -u -r1.63 build.xml
--- release/build.xml	24 Feb 2008 02:18:25 -0000	1.63
+++ release/build.xml	6 Jan 2011 20:35:42 -0000
@@ -26,7 +26,7 @@
 	<dirname property="app.dir" file="." /> <!-- The directory of the buildfile to run to build the app -->
 	<property name="releasefiles.dir" value="${app.dir}/build" /> <!-- The directory of the files to release -->
 	<property name="result.dir" value="." /> <!-- The directory where to put the result -->
-	<property name="target.protocols" value="icc fics" /> <!-- The list of protocols to target -->
+	<property name="target.protocols" value="fics" /> <!-- The list of protocols to target -->
 	<property name="target.servers" value="icc fics wcl" /> <!-- The list of servers to target -->
 	<property name="osx.icon" value="osx/icon.icns" />
 	
@@ -435,7 +435,8 @@
 	
 	<!-- Applet release for FICS. Resulting file is ${applet-fics-archive} -->
 	<target name="applet.fics" depends="init" description="Builds an applet release for FICS">
-		<antcall target="create-applet-archive">
+		<!--<antcall target="create-applet-archive"> - Wil  Mahan -->
+		<antcall target="applet">
 			<param name="protocol.id" value="fics" />
 			<param name="server.id" value="fics" />
 			<param name="server.classname" value="free.jin.freechess.servers.fics.FICSServer" />
Index: release/applet/server_support.php
===================================================================
RCS file: /cvsroot/jin/jin/release/applet/server_support.php,v
retrieving revision 1.2
diff -u -r1.2 server_support.php
--- release/applet/server_support.php	24 Feb 2008 02:16:28 -0000	1.2
+++ release/applet/server_support.php	6 Jan 2011 20:35:43 -0000
@@ -12,7 +12,7 @@
 	
 	// Returns the port to which the applet should connect
 	function getPort(){
-		return 5001;
+		return 5000;
 	}
 	
 	
@@ -39,4 +39,4 @@
 			return null;
 	}
 		
-?>
\ No newline at end of file
+?>
Index: src/free/freechess/FreechessConnection.java
===================================================================
RCS file: /cvsroot/jin/jin/src/free/freechess/FreechessConnection.java,v
retrieving revision 1.51
diff -u -r1.51 FreechessConnection.java
--- src/free/freechess/FreechessConnection.java	7 Jun 2007 14:38:46 -0000	1.51
+++ src/free/freechess/FreechessConnection.java	6 Jan 2011 20:35:45 -0000
@@ -32,6 +32,7 @@
 import java.util.regex.Pattern;
 
 import free.util.Connection;
+import free.util.TextUtilities; // wtm
 
 
 /**
@@ -424,7 +425,8 @@
 
     try{
       OutputStream out = getOutputStream();
-      out.write(command.getBytes("ASCII"));
+      //out.write(command.getBytes("ASCII"));
+      out.write(command.getBytes("UTF-8")); // wtm for FatICS
       out.write('\n');
       out.flush();
     } catch (IOException e){
@@ -471,44 +473,56 @@
   protected Object readMessage(InputStream inputStream) throws IOException{
     PushbackInputStream pin = (PushbackInputStream)inputStream;
     StringBuffer buf = new StringBuffer();
+    //XXX could use this instead? InputStreamReader reader = new InputStreamReader(pin, "UTF-8"); 
+    ByteArrayOutputStream out = new ByteArrayOutputStream();
     
     boolean lineStartsWithPrompt = false;
     while (true){
       int b = pin.read();
       
       if (b < 0){
-        if (buf.length() == 0) // Clean disconnection
+        if (out.size() == 0) // Clean disconnection
           return null;
         break;
       }
             
       // End of line
-      if (b == '\n'){
-        // FICS uses \n\r for an end-of-line marker!?
-        // Eat the following '\r', if there is one
+      if (b == '\n' || b == '\r'){
+        // FICS uses \n\r for an end-of-line marker.
+        // FatICS uses \r\n.
+        // Eat the following '\r' or '\n', if there is one
+        int oldb = b;
         b = pin.read();
-        if ((b > 0) && (b != '\r'))
-          pin.unread(b);
+
+        if (b > 0) {
+          if (((b == '\r') || (b == '\n')) && b != oldb) {
         
-        // Ignore all-prompt lines
-        if (lineStartsWithPrompt && (buf.length() == 0)){
-          lineStartsWithPrompt = false;
-          continue;
+          // Ignore all-prompt lines
+          if (lineStartsWithPrompt && (out.size() == 0)){
+            lineStartsWithPrompt = false;
+            continue;
+          }
+          else
+            break;
+          }
+          else {
+            pin.unread(b);
+          }
         }
-        else
-          break;
       }
       
-      buf.append((char)b);
+      out.write((byte)b);
+      //System.out.print(Integer.toHexString(b) + " ");
       
       // Filter out the prompt
-      if (buf.toString().equals("fics% ")){
-        buf.setLength(0);
+      if (out.toString("UTF-8").equals("fics% ")){
+        out.reset();
         lineStartsWithPrompt = true;
       }
     }
-    
-    return buf.toString();
+
+    // FatICS always uses UTF-8
+    return out.toString("UTF-8");
   }
   
   
@@ -523,7 +537,7 @@
     
     if (logStream != null)
       logStream.println(line);
-    
+
     if (handleGameInfo(line))
       return;
     if (handleStyle12(line))
Index: src/free/jin/console/AbstractConsoleDesignation.java
===================================================================
RCS file: /cvsroot/jin/jin/src/free/jin/console/AbstractConsoleDesignation.java,v
retrieving revision 1.18
diff -u -r1.18 AbstractConsoleDesignation.java
--- src/free/jin/console/AbstractConsoleDesignation.java	16 Mar 2008 01:18:02 -0000	1.18
+++ src/free/jin/console/AbstractConsoleDesignation.java	6 Jan 2011 20:35:46 -0000
@@ -339,6 +339,7 @@
   
   private String getActualEncoding(){
     return encoding == null ? console.getConsoleManager().getEncoding() : encoding;
+    //return "UTF-8"; // wtm
   }
   
   
Index: src/free/jin/console/ConsoleManager.java
===================================================================
RCS file: /cvsroot/jin/jin/src/free/jin/console/ConsoleManager.java,v
retrieving revision 1.70
diff -u -r1.70 ConsoleManager.java
--- src/free/jin/console/ConsoleManager.java	22 Jul 2008 09:49:54 -0000	1.70
+++ src/free/jin/console/ConsoleManager.java	6 Jan 2011 20:35:47 -0000
@@ -246,7 +246,7 @@
    */
   
   private void loadEncoding(){
-    String encoding = getPrefs().getString("encoding", TextUtilities.getDefaultCharsetName());
+    String encoding = getPrefs().getString("encoding", "UTF-8"); // wtm TextUtilities.getDefaultCharsetName());
 
     this.encoding = Charset.isSupported(encoding) ? encoding : null;
   }
@@ -726,7 +726,8 @@
   
   public void setEncoding(String encoding) throws UnsupportedEncodingException{
     if (encoding == null)
-      encoding = TextUtilities.getDefaultCharsetName();
+      //wtm encoding = TextUtilities.getDefaultCharsetName();
+      encoding = "UTF-8";
     
     if (!Charset.isSupported(encoding))
       throw new UnsupportedEncodingException(encoding);
Index: src/free/jin/console/prefs/EncodingPrefsPanel.java
===================================================================
RCS file: /cvsroot/jin/jin/src/free/jin/console/prefs/EncodingPrefsPanel.java,v
retrieving revision 1.5
diff -u -r1.5 EncodingPrefsPanel.java
--- src/free/jin/console/prefs/EncodingPrefsPanel.java	16 Mar 2008 01:15:14 -0000	1.5
+++ src/free/jin/console/prefs/EncodingPrefsPanel.java	6 Jan 2011 20:35:48 -0000
@@ -88,9 +88,10 @@
    * The displayed name for the "system default" encoding. 
    */
   
-  private static final String DEFAULT_ENCODING_NAME = 
-    I18n.get(EncodingPrefsPanel.class).getFormattedString("defaultEncoding.name", 
-        new Object[]{TextUtilities.getDefaultCharsetName()});
+  private static final String DEFAULT_ENCODING_NAME =
+    "UTF-8"; // wtm
+    //I18n.get(EncodingPrefsPanel.class).getFormattedString("defaultEncoding.name", 
+    //    new Object[]{TextUtilities.getDefaultCharsetName()});
   
   
   
@@ -187,7 +188,8 @@
           
           encodings.setModel(model);
           
-          boolean isSelectedDefault = TextUtilities.getDefaultCharset().equals(selectedEncoding);
+          //boolean isSelectedDefault = TextUtilities.getDefaultCharset().equals(selectedEncoding);
+          boolean isSelectedDefault = selectedEncoding.equals("UTF-8"); // wtm
           
           int selectedIndex = -1;
           for (int i = 0; i < model.getSize(); i++){
Index: src/free/jin/freechess/JinFreechessConnection.java
===================================================================
RCS file: /cvsroot/jin/jin/src/free/jin/freechess/JinFreechessConnection.java,v
retrieving revision 1.98
diff -u -r1.98 JinFreechessConnection.java
--- src/free/jin/freechess/JinFreechessConnection.java	10 Mar 2008 02:16:09 -0000	1.98
+++ src/free/jin/freechess/JinFreechessConnection.java	6 Jan 2011 20:35:52 -0000
@@ -109,7 +109,8 @@
    */
   
   public String getTextEncoding(){
-    return null;
+    //wtm return null;
+    return "UTF-8";
   }
 
 
@@ -277,6 +278,7 @@
         else
           e.printStackTrace(); // Shouldn't happen, I think
       }
+    result = null; // wtm - disable timeseal for now
     
     if (result == null)
       result = new Socket(hostname, port);
@@ -2434,7 +2436,13 @@
     if (!ourGame)
       throw new IllegalArgumentException("The specified Game object was not created by this JinConnection or the game has ended.");
 
-    sendCommand(moveToString(game, move), true, true, false);
+    //sendCommand(moveToString(game, move), true, true, false);
+    // Previously avoidAliasing was set to true, but I don't think it's
+    // justified, since it appears that FICS does not expand aliases
+    // when parsing moves anyway.
+    // FatICS parses moves even before stripping the leading $, so I'm
+    // setting avoidAliasing to false to make things work.
+    sendCommand(moveToString(game, move), true, false, false);
 
     Vector unechoedGameMoves = (Vector)unechoedMoves.get(game);
     if (unechoedGameMoves == null){
