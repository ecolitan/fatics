from twisted.internet.protocol import Protocol

import user

connections = []

class connection(Protocol):
        def connectionMade(self):
                connections.append(self)
                f = open("messages/welcome.txt")
                self.transport.write(f.read())
                self.login()

        def login(self):
                self.dataReceived = self.dataReceivedLogin
                f = open("messages/login.txt")
                self.transport.write(f.read())
                self.transport.write("login: ")

        def connectionLost(self, reason):
                connections.remove(self)

        def dataReceivedLogin(self, data):
                name = data.strip()
                try:
                        self.user = user.get_by_name(name)
                except user.UsernameException as e:
                        self.transport.write('\n' + e.reason + '\n')
                else:
                        if self.user.is_guest:
                                if self.user.autogenerated_name:
                                        self.transport.write('\nLogging you in as "%s"; you may use this name to play unrated games.\n(After logging in, do "help register" for more info on how to register.)\n\nPress return to enter as "%s":' % (self.user.name, self.user.name))
                                else:
                                        self.transport.write('\n"%s" is not a registered name.  You may play unrated games as a guest.\n(After logging in, do "help register" for more info on how to register.)\n\nPress return to enter as "%s":' % (self.user.name, self.user.name))
                                self.dataReceived = self.dataReceivedPasswd
                        else:
                                self.transport.write('\n%s is a registered name.  If it is yours, type the password.\nIf not, just hit return to try another name.\n\npassword: ' % name)
                                self.dataReceived = self.dataReceivedPasswd
        
        def dataReceivedPasswd(self, data):
                if self.user.is_guest:
                        # ignore whater was entered in place of a password
                        self.dataReceived = self.dataReceivedLoggedIn
                else:
                        passwd = data.strip()
                        if len(passwd) == 0:
                                self.login()
                        elif self.user.check_passwd(passwd):
                                self.dataReceived = self.dataReceivedLoggedIn
                        else:
                                self.transport.write('\n\n**** Invalid password! ****\n\n')
                                self.login()

                assert(self.dataReceived != self.dataReceivedPasswd)

        def dataReceivedLoggedIn(self, data):
                if data == 'quit\n':
                        self.transport.loseConnection()
                else:
                        print "command: %s" % data
                
# vim: expandtab tabstop=8 softtabstop=8 shiftwidth=8 smarttab autoindent ft=python
